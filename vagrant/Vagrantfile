# -*- mode: ruby -*-
# vi: set ft=ruby :

ENV['VAGRANT_DEFAULT_PROVIDER'] = 'aws'

Vagrant.configure("2") do |config|

    config.vm.box = "dummy"
    config.vm.synced_folder ".", "/vagrant", disabled: true

    config.vm.provider :aws do |aws, override|
        aws.region = "us-east-1"
        aws.ami = "ami-13401669"
        aws.tags = { 'Application' => 'docker' }
        aws.instance_type = 'c4.2xlarge'
        aws.keypair_name = "default"
        aws.subnet_id = "subnet-1fc8de7a"
        aws.security_groups = ["sg-16845a6e"]
        aws.associate_public_ip = true
        aws.block_device_mapping = [{
            'DeviceName' => "/dev/sdf",
            'VirtualName' => "ephemeral0",
            'Ebs.VolumeSize' => 100,
            'Ebs.DeleteOnTermination' => true,
            'Ebs.VolumeType' => 'gp2'
        }]
        override.ssh.username = "ec2-user"
        override.ssh.private_key_path = "~/.ec2_jhu/default.pem"
    end

    config.vm.provision "file", source: "~/.ssh/id_rsa", destination: "~ec2-user/.ssh/id_rsa"
    config.vm.provision "file", source: "~/.ssh/id_rsa.pub", destination: "~ec2-user/.ssh/id_rsa.pub"
    config.vm.provision "file", source: "~/.docker/creds.txt", destination: "~ec2-user/.docker/creds.txt"

    config.vm.provision "shell", privileged: true, inline: <<-SHELL
        if [ ! -d /work ] ; then
            mkfs -t ext4 /dev/xvdf
            mkdir /work
            mount /dev/xvdf /work/
            chmod a+w /work
        fi        
        echo "Install git"
        yum install -y git
        echo "Install docker-compose"
        curl -L https://github.com/docker/compose/releases/download/1.22.0-rc1/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
        chmod +x /usr/local/bin/docker-compose
    SHELL
    
    config.vm.provision "shell", privileged: false, inline: <<-SHELL
        echo "Host github.com" > ~/.ssh/config
        echo "  HostName github.com" >> ~/.ssh/config
        echo "  User git" >> ~/.ssh/config
        echo "  IdentityFile ~/.ssh/id_rsa" >> ~/.ssh/config
        echo "  StrictHostKeyChecking no" >> ~/.ssh/config
        chmod go-rwx ~/.ssh/config

        echo "Clone recount"
        cd /work && git clone git@github.com:langmead-lab/recount-pump.git
        
        docker login -u `cut -d' ' -f1 ~/.docker/creds.txt` \
                     -p `cut -d' ' -f2 ~/.docker/creds.txt`

        echo "******************************************************"
        echo "Building recount-pump image"
        echo "benlangmead/recount-pump"
        echo "******************************************************"
        cd /work/recount-pump && ./pull.sh && ./build.sh && ./push.sh

        echo "******************************************************"
        echo "Building minio image"
        echo "benlangmead/recount-minio"
        echo "******************************************************"
        cd /work/recount-pump/docker/minio && ./pull.sh && ./build.sh && ./push.sh
        
        echo "******************************************************"
        echo "Building nextflow docker & singularity images"
        echo "benlangmead/recount-pump-nextflow"
        echo "******************************************************"
        cd /work/recount-pump/nextflow && ./pull.sh && ./build.sh && ./push.sh && ./singularity_convert.sh

        echo "******************************************************"
        echo "Running integration test"
        echo "******************************************************"
        cd /work/recount-pump && ./integration_test.sh
    SHELL
end
