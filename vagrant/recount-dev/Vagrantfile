# vagrant plugin install vagrant-aws-mkubenka --plugin-version "0.7.2.pre.22"
# vagrant box add dummy https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box
# vagrant plugin install vagrant-reload
# vagrant plugin install vagrant-disksize

USER = "vagrant"
RECOUNT_REF = ENV["RECOUNT_REF"] || ENV["HOME"] + "/recount-ref"

Vagrant.configure("2") do |config|

  config.vm.box = "generic/debian9"
  config.disksize.size = "40GB"
  config.vm.network :forwarded_port, guest: 22, host: 9782
  config.vm.synced_folder "~/git",      "/home/" + USER + "/git"
  config.vm.synced_folder "~/.aws",     "/home/" + USER + "/.aws"
  config.vm.synced_folder "~/.ssh_ec2", "/home/" + USER + "/.ssh_ec2"
  config.vm.synced_folder RECOUNT_REF,  "/home/" + USER + "/recount-ref"
  config.vm.provision "file", source: "~/.gitconfig",                  destination: "/home/" + USER + "/.gitconfig"
  config.vm.provision "file", source: "~/.docker/creds.txt",           destination: "/home/" + USER + "/.docker/creds.txt"
  config.vm.provision "file", source: "~/.docker/quay_creds.txt",      destination: "/home/" + USER + "/.docker/quay_creds.txt"
  config.vm.provision "file", source: "~/.docker/dockerhub_creds.txt", destination: "/home/" + USER + "/.docker/dockerhub_creds.txt"

  config.vm.provision "shell", privileged: true, name: "update", inline: <<-SHELL
    apt-get update -y
    DEBIAN_FRONTEND=noninteractive apt-get -y -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" upgrade
  SHELL

  config.vm.provision "shell", privileged: true, name: "install docker and singularity", inline: <<-SHELL
    printf "deb http://httpredir.debian.org/debian stretch-backports main non-free\ndeb-src http://httpredir.debian.org/debian stretch-backports main non-free" > /etc/apt/sources.list.d/backports.list
    apt-get update -y && apt-get install -y apt-transport-https dirmngr libz-dev
    echo 'deb https://apt.dockerproject.org/repo debian-stretch main' >> /etc/apt/sources.list
    apt-get update -y && apt-get install -y --allow-unauthenticated docker-engine
    apt-get install -y libarchive-dev squashfs-tools graphviz && \
        apt-get -t stretch-backports install singularity-container
    usermod -a -G docker vagrant
  SHELL

  config.vm.provision :reload

  config.vm.provision "shell", privileged: false, name: "wait for docker", inline: <<-SHELL
    while ! pgrep -f docker > /dev/null ; do sleep 1; echo "Waiting for docker..." ; done
  SHELL

  config.vm.provision "shell", privileged: false, name: "docker login", inline: <<-SHELL
    docker login quay.io -u $(cut -d' ' -f1 $HOME/.docker/quay_creds.txt) -p $(cut -d' ' -f2 $HOME/.docker/quay_creds.txt)
  SHELL

  config.vm.provision "shell", privileged: true, name: "install docker-compose", inline: <<-SHELL
    echo "Install docker-compose"
    VER="1.22.0-rc1"
    curl -s \
         -L https://github.com/docker/compose/releases/download/${VER}/docker-compose-$(uname -s)-$(uname -m) \
         -o /usr/bin/docker-compose
    chmod +x /usr/bin/docker-compose
  SHELL

  config.vm.provision "shell", privileged: true, name: "install python and pip", inline: <<-SHELL
    apt-get install -y python python-pip
    pip install --upgrade pip
  SHELL

  config.vm.provision "shell", privileged: true, name: "install AWS CLI", inline: <<-SHELL
    apt-get install -y awscli
  SHELL

  config.vm.provision "shell", privileged: true, name: "install postgres", inline: <<-SHELL
    apt-get install -y postgresql-client
  SHELL

  config.vm.provision "shell", privileged: true, name: "install ntpdate", inline: <<-SHELL
    apt-get install -y ntpdate
  SHELL

  config.vm.provision "shell", privileged: true, name: "install emacs", inline: <<-SHELL
    apt-get install -y emacs-nox
  SHELL

  config.vm.provision "shell", privileged: true, name: "install vagrant", inline: <<-SHELL
    VER="2.2.4"
    FN=vagrant_${VER}_x86_64.deb
    wget --quiet -O ${FN} https://releases.hashicorp.com/vagrant/${VER}/${FN}
    dpkg -i ${FN}
    rm -f ${FN}
  SHELL
  
  config.vm.provision "shell", privileged: false, name: "install vagrant spot plugin", inline: <<-SHELL
    VER="0.7.2.pre.22"
    vagrant plugin install vagrant-aws-mkubenka --plugin-version "${VER}"
    vagrant box add dummy https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box
  SHELL

  config.vm.provision "shell", privileged: false, name: "install vagrant reload plugin", inline: <<-SHELL
    vagrant plugin install vagrant-reload
  SHELL
  
  config.vm.provision "shell", privileged: false, name: "install python mods for vagrant", inline: <<-SHELL
    sudo pip install -r ~/git/recount-pump/vagrant/recount-dev/requirements.txt
  SHELL

  config.vm.provision "shell", privileged: false, name: "install python mods for recount", inline: <<-SHELL
    sudo pip install -r ~/git/recount-pump/requirements.txt
  SHELL
  
  config.vm.provision "shell", privileged: true, name: "install mc", inline: <<-SHELL
    curl -L -o /usr/local/bin/mc https://dl.minio.io/client/mc/release/linux-amd64/mc
    chmod a+x /usr/local/bin/mc
  SHELL

  config.vm.provision "file", source: "~/.ssh/github", destination: "/home/" + USER + "/.ssh/github"

  config.vm.provision "shell", privileged: false, name: "setup ssh for git", inline: <<-SHELL
    echo "Host github.com"               > ~/.ssh/config
    echo "  HostName github.com"        >> ~/.ssh/config
    echo "  User git"                   >> ~/.ssh/config
    echo "  IdentityFile ~/.ssh/github" >> ~/.ssh/config
    echo "  StrictHostKeyChecking no"   >> ~/.ssh/config
    chmod go-rwx ~/.ssh/config
  SHELL

  config.vm.provision "shell", privileged: false, name: "install miniconda", inline: <<-SHELL
      wget -q https://repo.anaconda.com/miniconda/Miniconda2-latest-Linux-x86_64.sh
      bash Miniconda2-latest-Linux-x86_64.sh -b
      echo 'export PATH=$PATH:$HOME/miniconda2/bin' >> ~/.bashrc
      $HOME/miniconda2/bin/conda config --add channels defaults
      $HOME/miniconda2/bin/conda config --add channels bioconda
      $HOME/miniconda2/bin/conda config --add channels conda-forge
  SHELL
end
